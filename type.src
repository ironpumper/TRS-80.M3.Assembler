°°°±°	;	ROM AND TRSDOS CALLS°°°²°	;	ROM CALLS°°°³°	RESET	EQU	0000H°°°´°	KBCHAR	EQU	002BH°°°µ°	VDCHAR	EQU	0033H°°°¶°	PRCHAR	EQU	003BH°°°·°	KBLINE	EQU	0040H°°°¸°	KBWAIT	EQU	0049H°°°¹°	RSRCV	EQU	0050H°°±°°	RSTX	EQU	0055H°°±±°	RSINIT	EQU	005AH°°±²°	DELAY	EQU	0060H°°±³°	INITIO	EQU	0069H°°±´°	ROUTE	EQU	006CH°°±µ°	VDCLS	EQU	01C9H°°±¶°	PRSCN	EQU	01D9H°°±·°	VDLINE	EQU	021BH°°±¸°	CSIN	EQU	0235H°°±¹°	CSOUT	EQU	0264H°°²°°	CSHWR	EQU	0287H°°²±°	KBBRK	EQU	028DH°°²²°	CSHIN	EQU	0296H°°²³°	CLKON	EQU	0298H°°²´°	CLKOFF	EQU	02A1H°°²µ°	READY	EQU	1A19H°°²¶°	DATE	EQU	3033H°°²·°	TIME	EQU	3036H°°²¸°	SETCAS	EQU	3042H°°²¹°	PRSTAT	EQU	37E8H°°³°°	;	TRSDOS CALLS°°³±°	INIT	EQU	4420H		;Create a file°°³²°	OPEN	EQU	4424H°°³³°	POSN	EQU	4442H°°³´°	READ	EQU	4436H°°³µ°	WRITE	EQU	4439H°°³¶°	VERF	EQU	443CH°°³·°	PUTEXT	EQU	444BH°°³¸°	BKSPC	EQU	4445H°°³¹°	REWIND	EQU	443FH°°´°°	POSEOF	EQU	4448H°°´±°	SYNTAX	EQU	441CH°°´²°	DIVIDE	EQU	4451H°°´³°	DMULT	EQU	444EH°°´´°	RAMDIR	EQU	4290H°°´µ°	FILPTR	EQU	428DH°°´¶°	CLOSE	EQU	4428H°°´·°	KILL	EQU	442CH°°´¸°	JP2DOS	EQU	402DH°°´¹°	ERRDSP	EQU	4409H°°µ°°	DSPDIR	EQU	4419H°°µ±°	COMDOS	EQU	4299H		;Exits to TRSDOS READY°°µ²°	CMDDOS	EQU	429CH		;returns to caller°°µ³°	CMDTXT	EQU	4225H		;Get common core°°µ´°	MEMEND	EQU	4411H°°µµ°	;	End of rom & TRSDOS calls.°°µ¶°	;°°µ·°	;--------------------------------------------------------°°µ¸°	;°°µ¹°	;°°¶°°	;°°¶±°	;	Program	:	TYPE°°¶²°	;	Author	:	John C. Orlowski°°¶³°	;	Date	:	05-Mar-83°°¶´°	;	System	:	Model III 48K 1 disk°°¶µ°	;°°¶¶°	;	This program copies the DEC RT11 °°¶·°	;	'TYPE' command°°¶¸°	;	The ccl form is TYPE filename/ext°°¶¹°	;°°·°°		ORG	5200H		;After TRSDOS°°·±°	START	PUSH	HL°°·²°		LD	BC,63°°·³°		LD	A,','		;Search for switch°°·´°		CPIR°°·µ°		JP	NZ,NOSWIT°°·¶°		LD	A,(HL)°°··°		LD	(OPTION),A	;Save Option°°·¸°		DEC	HL°°·¹°		LD	(HL),0DH	;Put <CR> where comma was°°¸°°	;	CALL	VDCLS°°¸±°	NOSWIT	POP	HL°°¸²°		LD	DE,DCB		;Data control block°°¸³°		CALL	SYNTAX		;Check for valid file°°¸´°	; name and move it into the DCB°°¸µ°		JP	NZ,ERROR	;Bad file name?°°¸¶°		LD	DE,DCB°°¸·°		LD	HL,BUFFER	;Point to 256 byte buff.°°¸¸°		LD	B,0		;Record length 0°°¸¹°		CALL	OPEN		;Open file°°¹°°		JP	NZ,ERROR	;File not found?°°¹±°		LD	HL,0		;Standard record length°°¹²°	LOOP	LD	HL,BUFFER	;Clear buffer°°¹³°		LD	DE,BUFFER+1	;Test°°¹´°		LD	BC,255°°¹µ°		LD	(HL),0		;ZERO IT°°¹¶°		LDIR			;Clear it°°¹·°		LD	DE,DCB°°¹¸°		CALL	READ		;Read sector°°¹¹°		JP	NZ,ERROR	;if error then go°±°°°	;°±°±°	;	Now print the block to video°±°²°	;°±°³°		LD	DE,(DCB+12)	;Get last record number°±°´°		LD	HL,(DCB+10)	;Get next record number°±°µ°		DEC	HL		;Get current "    "°±°¶°		XOR	A°±°·°		SBC	HL,DE		;EOF=current record°±°¸°		JP	NZ,SKPEOF°±°¹°		LD	A,(DCB+8)	;Last record offset°±±°°		LD	B,A		;Put it in B°±±±°		JP	VDGO		;Go print it°±±²°	SKPEOF	LD	B,0°±±³°	VDGO	LD	HL,BUFFER	;°±±´°	VDLOP	LD	A,(HL)°±±µ°		AND	127		;MASK OUT BIT 7°±±¶°		CP	0EH		;If its one of the°±±·°		JP	M,NOCUR		;then skip it.°±±¸°		CP	20H		;Top limit+1 for above°±±¹°		JP	M,SKIP°±²°°	NOCUR	CP	09H		;<TAB>°±²±°		JP	NZ,PNT		;If not then skip°±²²°	;°±²³°	;°±²´°	;	Tab routine°±²µ°		EXX			;Swap regs°±²¶°		LD	HL,(4020H)	;Get cursor address°±²·°		LD	A,L		;Move it into A°±²¸°		AND	7		;Don't want 8 bit 4°±²¹°		LD	B,A		;Save it°±³°°		LD	A,8°±³±°		SUB	B		;How far away from 8 is B°±³²°		LD	B,A		;Save it in B°±³³°	TABLOP	LD	A,32°±³´°		CALL	VIDOUT		;Output spaces for tab°±³µ°		DJNZ	TABLOP		;Continue until done.°±³¶°		EXX			;Swap regs back°±³·°		JP	SKIP°±³¸°	;°±³¹°	PNT	CALL	VIDOUT°±´°°	SKIP	INC	HL		;Point to next char°±´±°	DELLOP	LD	A,(3840H)	;Keyboard matrix°±´²°		AND	128°±´³°		JP	NZ,DELLOP°±´´°		LD	A,(3840H)°±´µ°		AND	4		;Break°±´¶°		JP	NZ,ENDFIL°±´·°		LD	A,(3801H)°±´¸°		AND	1°±´¹°		CALL	NZ,ATDLAY°±µ°°		DJNZ	VDLOP°±µ±°		JP	LOOP		;When done°±µ²°	;°±µ³°	;°±µ´°	ATDLAY	CALL	KBCHAR°±µµ°		CP	13		;<CR>?°±µ¶°		JP	NZ,ATDLAY°±µ·°		RET°±µ¸°	;°±µ¹°	;°±¶°°	ERROR	CP	28°±¶±°		JP	Z,ENDFIL°±¶²°		CP	29°±¶³°		JP	Z,ENDFIL°±¶´°		CP	19°±¶µ°		JP	Z,ILLFIL°±¶¶°		CP	24°±¶·°		JP	Z,NOFILE°±¶¸°	;°±¶¹°	;	If no match for expected errors then print error°±·°°	;°±·±°		OR	64		;Set bit 6°±·²°		AND	127		;Give message, Don't RET.°±·³°		CALL	ERRDSP°±·´°	;	it won't return°±·µ°	ENDFIL	LD	A,0		;Zero flags°±·¶°		LD	DE,DCB		;Point to DCB°±··°		CALL	CLOSE°±·¸°		LD	A,0DH		;<CR>°±·¹°		CALL	VIDOUT°±¸°°		LD	HL,FILEND°±¸±°		CALL	VDLINE°±¸²°		JP	JP2DOS°±¸³°	ILLFIL	LD	HL,FILILL°±¸´°		CALL	VDLINE°±¸µ°		JP	JP2DOS°±¸¶°	NOFILE	LD	HL,FILENO°±¸·°		CALL	VDLINE°±¸¸°		JP	JP2DOS°±¸¹°	;°±¹°°	VIDOUT	EX	AF,AF'		;Save A°±¹±°		LD	A,(OPTION)°±¹²°		CP	'P'°±¹³°		JP	NZ,VIDEND	;If not then skip°±¹´°		EX	AF,AF'°±¹µ°		CALL	PRCHAR		;Print out character°±¹¶°		CALL	VDCHAR		;Out to screen°±¹·°		RET			;Back to business°±¹¸°	VIDEND	EX	AF,AF'		;Get A back°±¹¹°		CALL	VDCHAR		;Print it to screen°²°°°		RET			;Back to business°²°±°	FILILL	DEFM	'Illegal file name.....'°²°²°		DEFB	0DH°²°³°	FILEND	DEFM	'<EOF>'°²°´°		DEFB	0DH°²°µ°	FILENO	DEFM	'File not found......'°²°¶°		DEFB	0DH°²°·°	OPTION	DEFB	00H°²°¸°	DCB	DEFS	50		;Leave 50 bytes for DCB°²°¹°	BUFFER	DEFS	256		;Input buffer.°²±°°		END	START