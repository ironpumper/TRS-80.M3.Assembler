°°±°°	;°°±±°	;	Program	:	MISSLE/SRC°°±²°	;	Author	:	John C. Orlowski°°±³°	;	Date	:	01-Jun-83°°±´°	;	System	:	TRS-80 Model III 48K disk RS-232°°±µ°	;°°±¶°	;	Copyright (c) 1983 by John C. Orlowski°°±·°	;	------------------------------------------------°°±¸°	;°°±¹°	;	This program was a conversion°°²°°	;	of a basic program to show how to have more°°²±°	;	than one object (i.e. missle) on the screen°°²²°	;	at one time for games.  °°²³°	;	°°²´°	;°°²µ°	CLS	EQU	01C9H		;Clear screen°°²¶°	INITIO	EQU	0069H°°²·°	;°°²¸°		ORG	7000H°°²¹°	SHIP	DEFB	191°°³°°	MISSLE	DEFB	255°°³±°	MX	DEFS	16		;Missle X coord array°°³²°	MY	DEFS	16		;Missle Y coord array°°³³°	TARGET	DEFS	65		;Target string°°³´°	TARLEN	DEFB	00H		;# of astericks in target°°³µ°	PB	DEFB	00H°°³¶°	OX	DEFB	00H°°³·°	CMD	DEFB	00H°°³¸°	;°°³¹°	START	CALL	CLS°°´°°		LD	A,8+16+32°°´±°	;	I/O bus , video waits, Alternate character set°°´²°		OUT	(236),A		;I/O bus & video waits°°´³°		CALL	INITIO°°´´°		LD	HL,TARGET°°´µ°		LD	DE,TARGET+1°°´¶°		LD	BC,63°°´·°		LD	(HL),'*'	;Fill the target°°´¸°		LDIR			;With astericks°°´¹°	;°°µ°°		LD	HL,MX°°µ±°		LD	DE,MX+1°°µ²°		LD	BC,15°°µ³°		LD	(HL),00°°µ´°		LDIR			;Blank out array°°µµ°		LD	HL,MY°°µ¶°		LD	DE,MY+1°°µ·°		LD	BC,15°°µ¸°		LD	(HL),00		;Blank out array°°µ¹°	;°°¶°°	L220	EQU	$		;Line 220 in basic°°¶±°	;°°¶²°	LOOP	LD	BC,0500H°°¶³°		CALL	0060H		;Delay°°¶´°	;°°¶µ°		LD	A,(3840H)	;Keyboard°°¶¶°		SRL	A°°¶·°		SRL	A°°¶¸°		SRL	A		;A = A/8°°¶¹°		LD	B,A		;Save A°°·°°		IN	A,(00H)		;Read joystick°°·±°		CPL			;Complement read°°·²°		OR	B		;Combine them°°·³°		LD	(CMD),A		;Save it°°·´°	;°°·µ°		LD	A,(TARLEN)°°·¶°		CP	0°°··°		CALL	Z,TARFIL°°·¸°	L230	EQU	$°°·¹°		LD	A,(PB)°°¸°°		LD	(OX),A		;OX=PB°°¸±°	L240	EQU	$°°¸²°		LD	A,(TARGET)°°¸³°		LD	HL,TARGET+1°°¸´°		LD	DE,TARGET°°¸µ°		LD	BC,63°°¸¶°		LDIR°°¸·°		LD	(TARGET+63),A	;Roll the string°°¸¸°	L250	EQU	$°°¸¹°		LD	HL,TARGET°°¹°°		LD	DE,3C00H	;1st line on display°°¹±°		LD	BC,64		;64 bytes°°¹²°		LDIR			;Print it°°¹³°	L260	EQU	$°°¹´°		LD	A,(CMD)°°¹µ°	LEFT	BIT	2,A		;Left?°°¹¶°		JR	Z,RIGHT		;If not then continue°°¹·°		LD	A,(PB)		;Is base°°¹¸°		CP	1		;position >0°°¹¹°		JP	M,CONTIN	;If <1 then go°±°°°		DEC	A		;PB=PB°±°±°		LD	(PB),A		;-1°±°²°		JP	CONTIN°±°³°	L270	EQU	$°±°´°	RIGHT	BIT	3,A°±°µ°		JR	Z,CONTIN°±°¶°		LD	A,(PB)°±°·°		CP	62		;Is base position <62°±°¸°		JP	P,CONTIN	;If not then skip°±°¹°		INC	A		;PB=PB+1°±±°°		LD	(PB),A		;Save it°±±±°	L280	EQU	$°±±²°	CONTIN	EQU	$°±±³°		LD	HL,15360+960°±±´°		LD	A,(PB)°±±µ°		LD	E,A°±±¶°		LD	D,0°±±·°		ADD	HL,DE		;PRINT @PB+960°±±¸°		LD	A,(SHIP)°±±¹°		LD	(HL),A		;Print ship°±²°°	L290	EQU	$°±²±°		LD	A,(PB)°±²²°		LD	B,A		;PB=OX°±²³°		LD	A,(OX)°±²´°		CP	B°±²µ°		JP	Z,NOPNT		;If equal then skip°±²¶°		LD	HL,15360+960°±²·°		LD	A,(OX)°±²¸°		LD	E,A°±²¹°		LD	D,0		;PRINT @960+OX," ";°±³°°		LD	A,' '°±³±°		ADD	HL,DE		;Compute address°±³²°		LD	(HL),A		;Blank out ship if needed°±³³°	L300	EQU	$°±³´°	NOPNT	LD	A,(CMD)°±³µ°		BIT	4,A		;Fire button°±³¶°		CALL	NZ,IFIRE	;Initial fire routine°±³·°	L310	EQU	$°±³¸°		LD	A,(MX)°±³¹°		CP	0°±´°°		CALL	NZ,FIRE°±´±°	L320	EQU	$°±´²°		LD	A,(TARLEN)°±´³°	;°±´´°		LD	A,(3840H)°±´µ°		AND	4°±´¶°		JP	Z,$+4°±´·°		RST	30H		;DEBUG°±´¸°	L330	EQU	$°±´¹°		JP	LOOP°±µ°°	;°±µ±°	;	S u b r o u t i n e s°±µ²°	;°±µ³°	L340	EQU	$°±µ´°	IFIRE	LD	A,(MX)°±µµ°		CP	15		;At the max°±µ¶°		RET	Z		;Return if so°±µ·°	L350	EQU	$°±µ¸°		INC	A°±µ¹°		LD	(MX),A		;MX(0)=MX(0)+1°±¶°°	L360	EQU	$°±¶±°		LD	HL,MX°±¶²°		LD	E,A°±¶³°		LD	D,0°±¶´°		ADD	HL,DE		;Get array addr°±¶µ°		LD	A,(PB)°±¶¶°		LD	(HL),A		;MX(MX(0))=PB°±¶·°		LD	HL,MY°±¶¸°		ADD	HL,DE		;Compute address°±¶¹°		LD	(HL),14		;Line 14°±·°°	L380	EQU	$°±·±°		RET°±·²°	;°±·³°	L390	EQU	$°±·´°	L400	EQU	$°±·µ°	FIRE	LD	A,(MX)°±·¶°		CP	0°±··°		RET	Z°±·¸°		LD	B,1°±·¹°	L410	EQU	$°±¸°°	FLOOP	EQU	$°±¸±°		LD	HL,MY°±¸²°		LD	E,B°±¸³°		LD	D,0°±¸´°		ADD	HL,DE		;Compute address°±¸µ°		LD	A,(HL)		;Get Y(y)°±¸¶°	;	INC	A		;MY(y)+1°±¸·°		LD	L,A°±¸¸°		LD	H,0		;LD HL,A°±¸¹°		ADD	HL,HL°±¹°°		ADD	HL,HL°±¹±°		ADD	HL,HL°±¹²°		ADD	HL,HL°±¹³°		ADD	HL,HL°±¹´°		ADD	HL,HL		;HL=HL*64°±¹µ°		PUSH	HL		;Save HL°±¹¶°		LD	HL,MX°±¹·°		LD	E,B°±¹¸°		LD	D,0°±¹¹°		ADD	HL,DE		;Compute address°²°°°		LD	A,(HL)		;Get MX(y)°²°±°		LD	L,A°²°²°		LD	H,0°²°³°		POP	DE°²°´°		ADD	HL,DE		;Compute partial addr°²°µ°		LD	DE,3C00H	;Screen address°²°¶°		ADD	HL,DE		;Compute print @ position°²°·°		LD	A,(MISSLE)°²°¸°		LD	(HL),A°²°¹°	L420	EQU	$°²±°°		LD	HL,MY°²±±°		LD	E,B°²±²°		LD	D,0°²±³°		ADD	HL,DE		;Compute address°²±´°		LD	A,(HL)°²±µ°		CP	14		;MY(y)=14°²±¶°		JR	Z,NOBLNK	;If so then skip°²±·°		LD	HL,MY°²±¸°		LD	E,B°²±¹°		LD	D,0°²²°°		ADD	HL,DE		;Compute address°²²±°		LD	A,(HL)		;Get MY(y)°²²²°		INC	A°²²³°		LD	L,A°²²´°		LD	H,0		;LD HL,A°²²µ°		ADD	HL,HL°²²¶°		ADD	HL,HL°²²·°		ADD	HL,HL°²²¸°		ADD	HL,HL°²²¹°		ADD	HL,HL°²³°°		ADD	HL,HL		;HL=HL*64°²³±°		PUSH	HL		;save HL°²³²°		LD	HL,MX°²³³°		LD	E,B°²³´°		LD	D,0°²³µ°		ADD	HL,DE		;Compute address°²³¶°		LD	A,(HL)		;Get MX(y)°²³·°		LD	L,A°²³¸°		LD	H,0°²³¹°		POP	DE°²´°°		ADD	HL,DE		;Get partial address°²´±°		LD	DE,3C00H	;Print @ offset°²´²°		ADD	HL,DE°²´³°		LD	(HL),' '	;Blank out missle°²´´°	L430	EQU	$°²´µ°	NOBLNK	LD	HL,MY°²´¶°		LD	E,B°²´·°		LD	D,0°²´¸°		ADD	HL,DE°²´¹°		LD	A,(HL)°²µ°°		CP	0°²µ±°		JR	Z,MISEND°²µ²°	L440	EQU	$°²µ³°		DEC	A°²µ´°		LD	(HL),A		;MY(y)=MY(y)-1°²µµ°	L450	EQU	$°²µ¶°	L460	EQU	$°²µ·°		LD	A,(MX)°²µ¸°		INC	B°²µ¹°		SUB	B°²¶°°		JP	P,FLOOP		;NEXT Y°²¶±°		RET°²¶²°	L480	EQU	$°²¶³°	MISEND	LD	HL,MX°²¶´°		LD	E,B°²¶µ°		LD	D,0°²¶¶°		ADD	HL,DE		;Compute address°²¶·°		LD	A,(HL)°²¶¸°		LD	E,A°²¶¹°		LD	D,0°²·°°		LD	HL,TARGET°²·±°		ADD	HL,DE		;Compute target°²·²°		LD	A,(HL)		;Get current target item°²·³°		CP	'*'		;Asterick?°²·´°		JP	NZ,NASTER°²·µ°		LD	(HL),' '°²·¶°		LD	A,(TARLEN)°²··°		DEC	A°²·¸°		LD	(TARLEN),A	;Save number of astericks°²·¹°	L490	EQU	$°²¸°°	NASTER	LD	A,(MX)°²¸±°		CP	2°²¸²°		JP	M,SKPMOV	;If only one then skip°²¸³°		SUB	B		;Y-MX(0)-1°²¸´°	L500	EQU	$°²¸µ°		LD	HL,MX°²¸¶°		LD	E,B°²¸·°		LD	D,0°²¸¸°		ADD	HL,DE°²¸¹°		LD	E,L°²¹°°		LD	D,H°²¹±°		INC	HL°²¹²°		PUSH	BC		;Save B°²¹³°		LD	B,0°²¹´°		LD	C,A°²¹µ°		LDIR			;Move em down°²¹¶°		POP	BC°²¹·°	;°²¹¸°	L510	EQU	$°²¹¹°		LD	HL,MY°³°°°		LD	E,B°³°±°		LD	D,0°³°²°		ADD	HL,DE		;Compute address°³°³°		LD	E,L°³°´°		LD	D,H		;LD DE,HL°³°µ°		INC	HL°³°¶°		LD	B,0°³°·°		LD	C,A°³°¸°		LDIR			;Move em down 1°³°¹°	L530	EQU	$°³±°°	SKPMOV	LD	A,(MX)°³±±°		DEC	A°³±²°		LD	(MX),A		;MX(0)=MX(0)-1°³±³°	L540	EQU	$°³±´°		JP	FIRE°³±µ°	TARFIL	LD	HL,TARGET°³±¶°		LD	DE,TARGET+1°³±·°		LD	BC,63°³±¸°		LD	(HL),'*'°³±¹°		LDIR			;Fill target°³²°°		LD	A,64°³²±°		LD	(TARLEN),A°³²²°		RET			;Back to business°³²³°	;°³²´°	;°³²µ°		END	START		;Still sounds funny